# This file was auto-generated by cabal2nix. Please do NOT edit manually!

{ cabal, aeson, alex, ansiTerminal, base64Bytestring, binary
, blazeHtml, blazeMarkup, cmark, dataDefault, deepseqGenerics, Diff
, executablePath, extensibleExceptions, filemanip, filepath, haddockLibrary
, happy, highlightingKate, hslua, HTTP, httpClient, httpClientTls
, httpTypes, HUnit, JuicyPixels, mtl, network, networkUri
, pandocTypes, parsec, QuickCheck, random, scientific, SHA, syb
, tagsoup, temporary, testFramework, testFrameworkHunit
, testFrameworkQuickcheck2, texmath, text, time
, unorderedContainers, vector, xml, yaml, zipArchive, zlib
}:

cabal.mkDerivation (self: {
  pname = "pandoc";
  version = "1.16.0.2";
  sha256 = "f5f3262ef4574a111936fea0118557c523a8b0eaa7fea84b64b377b20a80f348";
  isLibrary = true;
  isExecutable = true;
  buildDepends = [
    aeson alex base64Bytestring binary blazeHtml blazeMarkup
    cmark dataDefault deepseqGenerics extensibleExceptions filemanip filepath
    haddockLibrary happy highlightingKate hslua HTTP httpClient
    httpClientTls httpTypes JuicyPixels mtl network networkUri
    pandocTypes parsec random scientific SHA syb tagsoup temporary
    texmath text time unorderedContainers vector xml yaml zipArchive
    zlib
  ];
  testDepends = [
    ansiTerminal Diff executablePath filepath highlightingKate HUnit
    pandocTypes QuickCheck syb testFramework testFrameworkHunit
    testFrameworkQuickcheck2 text zipArchive
  ];
  configureFlags = "-fhttps -fmake-pandoc-man-pages";
  jailbreak = true;
  doCheck = false;
  meta = {
    homepage = "http://johnmacfarlane.net/pandoc";
    description = "Conversion between markup formats";
    license = "GPL";
    platforms = self.ghc.meta.platforms;
    maintainers = with self.stdenv.lib.maintainers; [ simons ];
  };
})
